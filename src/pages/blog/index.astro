---
export const prerender = true;

import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { BLOG } from "@consts";

const data = (await getCollection("blog"))
.filter((post) => !post.data.draft)
.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
    [yearMonth: string]: CollectionEntry<"blog">[];
    };

const posts = data
.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
.reduce((acc: Acc, post) => {
    const year = post.data.date.getFullYear().toString();
    const month = (post.data.date.getMonth() + 1).toString().padStart(2, '0');
    const yearMonth = `${year}/${month}`;
    if (!acc[yearMonth]) {
    acc[yearMonth] = [];
    }
    acc[yearMonth].push(post);
    return acc;
    }, {});

const yearMonths = Object.keys(posts).sort((a, b) => b.localeCompare(a));
---

<Layout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="space-y-4">
        {
          yearMonths.map((yearMonth) => (
              <section class="animate space-y-4">
                <div class="font-semibold text-black dark:text-white">{yearMonth}</div>
                <div>
                  <ul class="not-prose flex flex-col gap-4">
                    {posts[yearMonth].map((post) => (
                        <li>
                          <ArrowCard entry={post} />
                        </li>
                    ))}
                  </ul>
                </div>
              </section>
          ))
        }
      </div>
    </div>
  </Container>
</Layout>